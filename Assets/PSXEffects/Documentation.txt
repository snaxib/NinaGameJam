 ____  ____  _  _  ____  ____  ____  ____  ___  ____  ____ 
(  _ \/ ___)( \/ )(  __)(  __)(  __)(  __)/ __)(_  _)/ ___)
 ) __/\___ \ )  (  ) _)  ) _)  ) _)  ) _)( (__   )(  \___ \
(__)  (____/(_/\_)(____)(__)  (__)  (____)\___) (__) (____/

-------------------------------------------------------------

Thank you for checking out my asset!  PSXEffects will help you create that
old, very outdated, yet beautiful look that the first PlayStation console provides.


This package includes one main script: PSXEffects.cs.  This script handles
setting variables and properties in PSXEffect's shaders and also handles
PSX image effect rendering.  It doesn't really need to be messed with as it
is intended to display all of the package's settings in the inspector.
However, you can set variables in this script during runtime if needed.

Basic Setup:
To set up PSXEffects quickly, drag the PSXEffects prefab from the Prefabs folder
into the scene.  This object includes both the PS1Camera and PS1Canvas and everything's
already set up there.

PSXEffects.cs properties:
-Screen Canvas - A reference to a RawImage where the screen with image effects renders
-Resolution Factor - Determines how pixelated the main display is (default: 2)
rendered (you can find a pre-made canvas in the included Prefabs folder)
-Limit Framerate - Determines the maximum frames per second, set to -1 for default (default: -1)
-Affine Texture Mapping - Simulates the PSX's distorted texture look (default: true)
-Polygonal Draw Distance - Simulates culling of entire polygons in many PSX
games relative to the distance from the camera (default: 0)
-Polygon Inaccuracy - Simulates the PSX's lack of a Z-buffer (default: 10)
-Vertex Inaccuracy - Simulates vertex snapping (default: 30)
-Saturated Diffuse - Adds a little more darkness to the dark side of meshes (default: 20)
-Use Skybox Lighting - Toggles whether to gather color from the skybox (default: false)
-Enable Post Processing - Toggles post processing on or off (default: true)
-Color Depth - Determines how many colors are allowed at once (default: 32)
-Subtraction Fade - Fades the screen just like original PSX games (default: 0)
-Darken Darks/Favor Red - Darkens dark colors and subtly tints them red like PSX lighting (default: 1)
-Scanlines - Draws scanlines on the screen (default: false)
-Vertical - Toggles vertical/horizontal scanlines (default: true)
-Scanline Intensity - Changes how intense the scanline effect is (default: 5)
-Dithering - Simulates PSX dithering effects (default: true)
-Dither Texture - Determines what texture to use to dither
-Dither Threshold - Changes how "sensitive" dithering gets applied (default: 1)
-Dither Intensity - Changes how intense the dithering effect is (5)


PSXEffects comes with a very important shader: PS1Shader.shader.  Creative name huh?
This shader handles the look of all models.

PSXShader.shader properties:
-Transparent - Whether the material should be see-through
-Backface Culling - Toggles rendering the back side of faces
-Unlit - Toggles scene lighting on the object
-Color - Tinting of the object (default: white)
-Texture - The main texture (default: white)
-Normal Map - The normal map (default: bump)
-Specular Map - A black and white texture that determines which parts are glossy (default: white)
-Specular Amount - Level of glossiness (default: 0.0)
-Metal Map - A texture that uses the red channel to determine metalness and the alpha channel for smoothness (default: white)
-Metallic Amount - The metalness of the material (default: 0.0)
-Smoothness Amount - The smoothness of the material (default: 0.5)
-Emission Map - A texture that determines which parts emit more color (default: white)
-Emission Amount - A value that determines how much the material emits color (default: 0)
-Cubemap - Cubemap reflection (default: rgb(0.5, 0.5, 0.5))


Tips:
When affine mapping is turned on, textures will stretch like crazy when the
camera gets close.  This effect is more noticable if the model's polygons
are bigger in size.  To tone down the stretching, subdivide your polygons
that are affected by extreme affine mapping stretching.

If you build your game and just see a black screen, this is because Unity
didn't include the PSXEffects shaders by default.  To fix this, go to
Edit>Project Settings>Graphics and under Built-in Shader Settings, expand
Always Included Shaders and add "Hidden/PS1ColorDepth" and "Custom/PS1Shader"
to the array.

If using ProBuilder and the object turns black when applying a PSXEffects
material, uncheck "Lightmap Static" under the object's Mesh Renderer.
